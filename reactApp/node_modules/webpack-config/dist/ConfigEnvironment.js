'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _map = require('babel-runtime/core-js/map');

var _map2 = _interopRequireDefault(_map);

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _entries = require('babel-runtime/core-js/object/entries');

var _entries2 = _interopRequireDefault(_entries);

var _getIterator2 = require('babel-runtime/core-js/get-iterator');

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _lodash = require('lodash');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @class
 * @extends {Map}
 */
var ConfigEnvironment = function (_Map) {
    (0, _inherits3.default)(ConfigEnvironment, _Map);

    function ConfigEnvironment() {
        (0, _classCallCheck3.default)(this, ConfigEnvironment);
        return (0, _possibleConstructorReturn3.default)(this, (ConfigEnvironment.__proto__ || (0, _getPrototypeOf2.default)(ConfigEnvironment)).apply(this, arguments));
    }

    (0, _createClass3.default)(ConfigEnvironment, [{
        key: 'setAll',

        /**
         * @param {...Object<String,*>} values
         * @returns {ConfigEnvironment}
         */
        value: function setAll() {
            var _this2 = this;

            for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {
                values[_key] = arguments[_key];
            }

            values.forEach(function (obj) {
                var _iteratorNormalCompletion = true;
                var _didIteratorError = false;
                var _iteratorError = undefined;

                try {
                    for (var _iterator = (0, _getIterator3.default)((0, _entries2.default)(obj)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                        var _step$value = (0, _slicedToArray3.default)(_step.value, 2),
                            key = _step$value[0],
                            value = _step$value[1];

                        _this2.set(key, value);
                    }
                } catch (err) {
                    _didIteratorError = true;
                    _iteratorError = err;
                } finally {
                    try {
                        if (!_iteratorNormalCompletion && _iterator.return) {
                            _iterator.return();
                        }
                    } finally {
                        if (_didIteratorError) {
                            throw _iteratorError;
                        }
                    }
                }
            });

            return this;
        }

        /**
         * @param {*} key
         * @returns {*}
         */

    }, {
        key: 'valueOf',
        value: function valueOf(key) {
            var value = this.get(key);

            return (0, _lodash.isFunction)(value) ? value.call(this, this) : value;
        }

        /**
         * @param {*} key
         * @param {*} [defaultValue]
         * @returns {*}
         */

    }, {
        key: 'getOrDefault',
        value: function getOrDefault(key, defaultValue) {
            var value = this.valueOf(key);

            return (0, _lodash.isUndefined)(value) ? defaultValue : value;
        }
    }]);
    return ConfigEnvironment;
}(_map2.default);

exports.default = ConfigEnvironment;
module.exports = exports['default'];
//# sourceMappingURL=ConfigEnvironment.js.map