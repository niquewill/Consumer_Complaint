{"version":3,"sources":["../src/ConfigDependencyIterator.js"],"names":["ConfigDependencyIterator","root","bypassMode","ignoreCircular","maxDeep","node","path","deep","children","map","getState","child","filename","concat"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;AAEA;;;;;AAKA;;;;IAIMA,wB;;;AACF;;;;;;;AAOA,oCAAYC,IAAZ,EAAkE;AAAA,QAAhDC,UAAgD,uEAAnC,CAAmC;AAAA,QAAhCC,cAAgC,uEAAf,IAAe;AAAA,QAATC,OAAS;AAAA;AAAA,qKACxDH,IADwD,EAClDC,UADkD,EACtCC,cADsC,EACtBC,OADsB;AAEjE;;AAED;;;;;;;0CAGsBC,I,EAAMC,I,EAAMC,I,EAAM;AAAA;;AACpC,aAAOF,KAAKG,QAAL,CAAcC,GAAd,CAAkB;AAAA,eAAS,OAAKC,QAAL,CAAcL,IAAd,EAAoBM,KAApB,EAA2BA,MAAMV,IAAN,CAAWW,QAAtC,EAAgDN,KAAKO,MAAL,CAAYF,MAAMV,IAAN,CAAWW,QAAvB,CAAhD,EAAkFL,OAAO,CAAzF,CAAT;AAAA,OAAlB,CAAP;AACH;;;;;kBAGUP,wB","file":"ConfigDependencyIterator.js","sourcesContent":["import RecursiveIterator from 'recursive-iterator';\n\n/**\n * @external RecursiveIterator\n * @see https://github.com/nervgh/recursive-iterator\n */\n\n/**\n * @class\n * @extends {external:RecursiveIterator}\n */\nclass ConfigDependencyIterator extends RecursiveIterator {\n    /**\n     * @constructor\n     * @param {ConfigDependency} root\n     * @param {Number} [bypassMode=0]\n     * @param {Boolean} [ignoreCircular=true]\n     * @param {Number} [maxDeep]\n     */\n    constructor(root, bypassMode = 0, ignoreCircular = true, maxDeep) {\n        super(root, bypassMode, ignoreCircular, maxDeep);\n    }\n\n    /**\n     * @override\n     */\n    getStatesOfChildNodes(node, path, deep) {\n        return node.children.map(child => this.getState(node, child, child.root.filename, path.concat(child.root.filename), deep + 1));\n    }\n}\n\nexport default ConfigDependencyIterator;\n"]}