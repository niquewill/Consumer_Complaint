"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _getIterator2 = require("babel-runtime/core-js/get-iterator");

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require("babel-runtime/helpers/createClass");

var _createClass3 = _interopRequireDefault(_createClass2);

var _weakMap = require("babel-runtime/core-js/weak-map");

var _weakMap2 = _interopRequireDefault(_weakMap);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* @private
* @type {WeakMap}
*/
var ENVIRONMENT = new _weakMap2.default();

/**
 * @private
 * @type {WeakMap}
 */
var PATTERN_CACHE = new _weakMap2.default();

/**
 * @class
 */

var ConfigStringResolver = function () {
    /**
     * @constructor
     * @param {ConfigEnvironment} environment
     * @param {ConfigPatternCache} patternCache
     */
    function ConfigStringResolver(environment, patternCache) {
        (0, _classCallCheck3.default)(this, ConfigStringResolver);

        ENVIRONMENT.set(this, environment);
        PATTERN_CACHE.set(this, patternCache);
    }

    /**
     * @readonly
     * @type {ConfigEnvironment}
     */


    (0, _createClass3.default)(ConfigStringResolver, [{
        key: "resolve",


        /**
         * @param {String} value
         * @returns {String}
         */
        value: function resolve(value) {
            var options = {};

            var _iteratorNormalCompletion = true;
            var _didIteratorError = false;
            var _iteratorError = undefined;

            try {
                for (var _iterator = (0, _getIterator3.default)(this.environment.keys()), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                    var key = _step.value;

                    options[key] = this.environment.valueOf(key);
                }
            } catch (err) {
                _didIteratorError = true;
                _iteratorError = err;
            } finally {
                try {
                    if (!_iteratorNormalCompletion && _iterator.return) {
                        _iterator.return();
                    }
                } finally {
                    if (_didIteratorError) {
                        throw _iteratorError;
                    }
                }
            }

            var resolvedValue = void 0;

            try {
                resolvedValue = this.patternCache.eval(value, options);
            } catch (err) {
                resolvedValue = value;
            }

            return resolvedValue;
        }
    }, {
        key: "environment",
        get: function get() {
            return ENVIRONMENT.get(this);
        }

        /**
         * @readonly
         * @type {ConfigPatternCache}
         */

    }, {
        key: "patternCache",
        get: function get() {
            return PATTERN_CACHE.get(this);
        }
    }]);
    return ConfigStringResolver;
}();

exports.default = ConfigStringResolver;
module.exports = exports["default"];
//# sourceMappingURL=ConfigStringResolver.js.map