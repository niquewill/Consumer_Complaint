{"version":3,"sources":["../src/ConfigMergeCommand.js"],"names":["ConfigMergeCommand","config","options","value","optionsResolver","resolve","x","y","Array","isArray"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAIA;;;;;;AAEA;;;;IAIMA,kB;;;;;;;;;;;AACF;;;gCAGQC,M,EAAQC,O,EAAS;AACrB,gBAAMC,QAAQ,KAAKC,eAAL,CAAqBC,OAArB,CAA6BJ,MAA7B,EAAqCC,OAArC,CAAd;;AAEA,mCAAUD,MAAV,EAAkBE,KAAlB,EAAyB,UAACG,CAAD,EAAIC,CAAJ,EAAU;AAAE;AACjC,oBAAIC,MAAMC,OAAN,CAAcH,CAAd,KAAoBE,MAAMC,OAAN,CAAcF,CAAd,CAAxB,EAA0C;AACtC,sEAAWD,CAAX,oCAAiBC,CAAjB;AACH,iBAFD,MAEO,IAAIC,MAAMC,OAAN,CAAcH,CAAd,KAAoB,sBAASC,CAAT,CAAxB,EAAqC;AACxC,sEAAWD,CAAX,IAAcC,CAAd;AACH,iBAFM,MAEA,IAAI,sBAASD,CAAT,KAAeE,MAAMC,OAAN,CAAcF,CAAd,CAAnB,EAAqC;AACxC,4BAAQD,CAAR,0CAAcC,CAAd;AACH;AACJ,aARD;AASH;;;;;kBAGUP,kB","file":"ConfigMergeCommand.js","sourcesContent":["import {\n    mergeWith,\n    isObject\n} from 'lodash';\nimport ConfigCommand from './ConfigCommand';\n\n/**\n * @class\n * @extends {ConfigCommand}\n */\nclass ConfigMergeCommand extends ConfigCommand {\n    /**\n     * @override\n     */\n    execute(config, options) {\n        const value = this.optionsResolver.resolve(config, options);\n\n        mergeWith(config, value, (x, y) => { // eslint-disable-line consistent-return\n            if (Array.isArray(x) && Array.isArray(y)) {\n                return [...x, ...y];\n            } else if (Array.isArray(x) && isObject(y)) {\n                return [...x, y];\n            } else if (isObject(x) && Array.isArray(y)) {\n                return [x, ...y];\n            }\n        });\n    }\n}\n\nexport default ConfigMergeCommand;\n"]}