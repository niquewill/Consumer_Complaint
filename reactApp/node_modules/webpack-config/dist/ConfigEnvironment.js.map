{"version":3,"sources":["../src/ConfigEnvironment.js"],"names":["ConfigEnvironment","values","forEach","obj","key","value","set","get","call","defaultValue","valueOf"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAKA;;;;IAIMA,iB;;;;;;;;;;;AACF;;;;iCAIkB;AAAA;;AAAA,8CAARC,MAAQ;AAARA,sBAAQ;AAAA;;AACdA,mBAAOC,OAAP,CAAe,eAAO;AAAA;AAAA;AAAA;;AAAA;AAClB,oEAA2B,uBAAeC,GAAf,CAA3B,4GAAgD;AAAA;AAAA,4BAApCC,GAAoC;AAAA,4BAA/BC,KAA+B;;AAC5C,+BAAKC,GAAL,CAASF,GAAT,EAAcC,KAAd;AACH;AAHiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIrB,aAJD;;AAMA,mBAAO,IAAP;AACH;;AAED;;;;;;;gCAIQD,G,EAAK;AACT,gBAAMC,QAAQ,KAAKE,GAAL,CAASH,GAAT,CAAd;;AAEA,mBAAO,wBAAWC,KAAX,IAAoBA,MAAMG,IAAN,CAAW,IAAX,EAAiB,IAAjB,CAApB,GAA6CH,KAApD;AACH;;AAED;;;;;;;;qCAKaD,G,EAAKK,Y,EAAc;AAC5B,gBAAMJ,QAAQ,KAAKK,OAAL,CAAaN,GAAb,CAAd;;AAEA,mBAAO,yBAAYC,KAAZ,IAAqBI,YAArB,GAAoCJ,KAA3C;AACH;;;;;kBAGUL,iB","file":"ConfigEnvironment.js","sourcesContent":["import {\n    isFunction,\n    isUndefined\n} from 'lodash';\n\n/**\n * @class\n * @extends {Map}\n */\nclass ConfigEnvironment extends Map {\n    /**\n     * @param {...Object<String,*>} values\n     * @returns {ConfigEnvironment}\n     */\n    setAll(...values) {\n        values.forEach(obj => {\n            for (const [key, value] of Object.entries(obj)) {\n                this.set(key, value);\n            }\n        });\n\n        return this;\n    }\n\n    /**\n     * @param {*} key\n     * @returns {*}\n     */\n    valueOf(key) {\n        const value = this.get(key);\n\n        return isFunction(value) ? value.call(this, this) : value;\n    }\n\n    /**\n     * @param {*} key\n     * @param {*} [defaultValue]\n     * @returns {*}\n     */\n    getOrDefault(key, defaultValue) {\n        const value = this.valueOf(key);\n\n        return isUndefined(value) ? defaultValue : value;\n    }\n}\n\nexport default ConfigEnvironment;\n"]}