{"version":3,"sources":["../src/ConfigStrategyList.js"],"names":["ConfigStrategyList","value","predicate","resolver","resolvedValue","throwsError","Error","err","Array"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;;IAIMA,kB;;;;;;;;;;;AACF;;;;;gCAKQC,K,EAAOC,S,EAAW;AAAA;AAAA;AAAA;;AAAA;AACtB,gEAAuB,IAAvB,4GAA6B;AAAA,wBAAlBC,QAAkB;;AACzB,wBAAI;AACA,4BAAMC,gBAAgBD,SAASF,KAAT,CAAtB;AAAA,4BACII,cAAc,qBAAQD,aAAR,KAA0BA,yBAAyBE,KADrE;;AAGA,4BAAIJ,UAAUE,aAAV,KAA4B,CAACC,WAAjC,EAA8C;AAC1CJ,oCAAQG,aAAR;AACA;AACH;AACJ,qBARD,CAQE,OAAOG,GAAP,EAAY,CAAE,CATS,CASR;AACpB;AAXqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAatB,mBAAON,KAAP;AACH;;;qBApB4BO,K;;kBAuBlBR,kB","file":"ConfigStrategyList.js","sourcesContent":["import {\n    isError\n} from 'lodash';\n\n/**\n * @class\n * @extends {Array}\n */\nclass ConfigStrategyList extends Array {\n    /**\n     * @param {*} value\n     * @param {Function} predicate\n     * @returns {*}\n     */\n    resolve(value, predicate) {\n        for (const resolver of this) {\n            try {\n                const resolvedValue = resolver(value),\n                    throwsError = isError(resolvedValue) || resolvedValue instanceof Error;\n\n                if (predicate(resolvedValue) && !throwsError) {\n                    value = resolvedValue;\n                    break;\n                }\n            } catch (err) {} // eslint-disable-line no-empty\n        }\n\n        return value;\n    }\n}\n\nexport default ConfigStrategyList;\n"]}