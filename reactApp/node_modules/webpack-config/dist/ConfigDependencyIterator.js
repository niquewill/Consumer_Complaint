'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _recursiveIterator = require('recursive-iterator');

var _recursiveIterator2 = _interopRequireDefault(_recursiveIterator);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @external RecursiveIterator
 * @see https://github.com/nervgh/recursive-iterator
 */

/**
 * @class
 * @extends {external:RecursiveIterator}
 */
var ConfigDependencyIterator = function (_RecursiveIterator) {
  (0, _inherits3.default)(ConfigDependencyIterator, _RecursiveIterator);

  /**
   * @constructor
   * @param {ConfigDependency} root
   * @param {Number} [bypassMode=0]
   * @param {Boolean} [ignoreCircular=true]
   * @param {Number} [maxDeep]
   */
  function ConfigDependencyIterator(root) {
    var bypassMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var ignoreCircular = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    var maxDeep = arguments[3];
    (0, _classCallCheck3.default)(this, ConfigDependencyIterator);
    return (0, _possibleConstructorReturn3.default)(this, (ConfigDependencyIterator.__proto__ || (0, _getPrototypeOf2.default)(ConfigDependencyIterator)).call(this, root, bypassMode, ignoreCircular, maxDeep));
  }

  /**
   * @override
   */


  (0, _createClass3.default)(ConfigDependencyIterator, [{
    key: 'getStatesOfChildNodes',
    value: function getStatesOfChildNodes(node, path, deep) {
      var _this2 = this;

      return node.children.map(function (child) {
        return _this2.getState(node, child, child.root.filename, path.concat(child.root.filename), deep + 1);
      });
    }
  }]);
  return ConfigDependencyIterator;
}(_recursiveIterator2.default);

exports.default = ConfigDependencyIterator;
module.exports = exports['default'];
//# sourceMappingURL=ConfigDependencyIterator.js.map